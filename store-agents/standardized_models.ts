/**
 * STANDARDIZED DATA MODELS
 * Use these exact models in your frontend for consistency
 */

// =====================
// PRODUCT MODEL
// =====================
export interface Product {
  // Core identification
  id?: string;                    // Document ID (auto-generated by Firestore)
  userId: string;                 // Owner user ID (STANDARDIZED FIELD)

  // Product details
  product_name: string;           // Primary product name field
  name?: string;                  // Alias for compatibility (same as product_name)
  description?: string;           // Product description
  category: string;               // Product category (required)
  subcategory?: string;           // Product subcategory
  brand?: string;                 // Product brand

  // Pricing and inventory
  unit_price: number;             // Selling price per unit (STANDARDIZED)
  cost_price?: number;            // Cost price per unit
  stock_quantity: number;         // Current stock quantity (STANDARDIZED)
  unit_of_measure: string;        // Unit of measurement (STANDARDIZED)

  // Business logic
  reorder_point?: number;         // Minimum stock level (default: 5)
  status: 'active' | 'inactive' | 'discontinued'; // Product status (default: 'active')

  // Metadata
  created_at: string;             // Creation timestamp (ISO format)
  updated_at: string;             // Last update timestamp

  // Optional fields
  image?: string;                 // Product image URL
  barcode?: string;               // Product barcode/SKU
  sku?: string;                   // Stock keeping unit
  supplier?: string;              // Supplier name
}

// =====================
// TRANSACTION/RECEIPT MODEL
// =====================
export interface TransactionItem {
  name: string;                   // Product name
  quantity: number;               // Quantity sold
  unit_price: number;             // Price per unit
  line_total: number;             // Total for this line (quantity * unit_price)
  sku?: string;                   // Product SKU
  category?: string;              // Product category
}

export interface Transaction {
  // Core identification
  transaction_id: string;         // Unique transaction ID
  userId: string;                 // Store owner user ID (STANDARDIZED)

  // Customer and store info
  customer_name?: string;         // Customer name (nullable)
  store_id: string;               // Store identifier

  // Transaction timing
  date: string;                   // Transaction date (YYYY-MM-DD)
  time: string;                   // Transaction time (HH:MM:SS)
  created_at: string;             // Creation timestamp (ISO format)

  // Items and financial details
  items: TransactionItem[];       // List of transaction items
  subtotal: number;               // Subtotal before tax
  tax_rate: number;               // Tax rate applied (default: 0.05)
  tax_amount: number;             // Tax amount
  total: number;                  // Total amount

  // Payment information
  payment_method: string;         // Payment method (default: 'cash')
  change_due?: number;            // Change given to customer

  // Status
  status: 'pending' | 'completed' | 'cancelled' | 'refunded'; // Transaction status
}

// =====================
// INVENTORY SUMMARY MODEL
// =====================
export interface InventorySummary {
  total_products: number;
  in_stock_count: number;
  low_stock_count: number;
  out_of_stock_count: number;
  low_stock_products: Product[];
  out_of_stock_products: Product[];
}

// =====================
// API RESPONSE MODELS
// =====================
export interface StockInquiryResponse {
  success: boolean;
  message: string;
  is_stock_query: boolean;
  products_count?: number;
  inventory_summary?: InventorySummary;
}

export interface TransactionResponse {
  success: boolean;
  message: string;
  receipt?: Transaction;
  frontend_receipt?: any;           // Legacy field for compatibility
  chat_response: string;
  errors?: string[];
  warnings?: string[];
  confirmation_required: boolean;
  pending_transaction_id?: string;
}

// =====================
// FIRESTORE COLLECTION NAMES
// =====================
export const COLLECTIONS = {
  PRODUCTS: 'products',
  TRANSACTIONS: 'receipts',         // Note: Currently using 'receipts' collection
  USERS: 'users',
  STORES: 'store_profiles'
} as const;

// =====================
// FIELD MAPPINGS (for migration/compatibility)
// =====================
export const FIELD_MAPPINGS = {
  // Product field mappings
  PRODUCT_USER_ID: 'userId',        // Standardized user ID field
  PRODUCT_NAME: 'product_name',     // Primary name field
  PRODUCT_PRICE: 'unit_price',      // Primary price field
  PRODUCT_STOCK: 'stock_quantity',  // Primary stock field
  PRODUCT_UNIT: 'unit_of_measure',  // Primary unit field

  // Transaction field mappings
  TRANSACTION_USER_ID: 'userId',    // Standardized user ID field (currently using 'user_id')
  TRANSACTION_COLLECTION: 'receipts' // Current collection name
} as const;
